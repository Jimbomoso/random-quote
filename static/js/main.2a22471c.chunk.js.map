{"version":3,"sources":["QuoteDB.js","components/QuoteAndAuthor.js","App.js","reportWebVitals.js","index.js"],"names":["quotes","QuoteAndAuthor","props","quote","generateRandomQuote","className","id","author","onClick","type","class","window","open","encodeURIComponent","App","state","arr","num","Math","floor","random","length","newQuote","setState","shuffleQuotes","sort","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA6BeA,EA7BA,CACX,CACI,MAAS,6MACT,OAAU,kBAEd,CACI,MAAS,+CACT,OAAU,eAGd,CACI,MAAS,kGACT,OAAU,mBAEd,CACI,MAAS,8CACT,OAAU,iBAEd,CACI,MAAS,8FACT,OAAU,eAEd,CACI,MAAS,0EACT,OAAU,eCrBH,SAASC,EAAeC,GAAQ,IACnCC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,oBACf,OACI,qBAAKC,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAYC,GAAG,YAA9B,UACI,mBAAGD,UAAU,YAAYC,GAAG,OAA5B,SAAoCH,EAAMA,QAC1C,oBAAIE,UAAU,aAAaC,GAAG,SAA9B,SAAwCH,EAAMI,SAC9C,yBACID,GAAG,YACHE,QAAS,WAAQJ,EAAoBJ,IACrCS,KAAK,SAHT,UAII,mBAAGC,MAAM,iBAJb,qBAMA,yBACIL,UAAU,OACVC,GAAG,cACHE,QAAS,WACLJ,EAAoBJ,GACpBW,OAAOC,KAAK,0CAA4CC,mBAAmBV,EAAMA,MAAQ,KAAOA,EAAMI,UAE1GE,KAAK,SAPT,cAOmB,mBAAGC,MAAM,iBAAT,eAPnB,uB,ICbKI,E,4MAGnBC,MAAQ,CACNZ,MAAOH,EAAO,GAAGG,MACjBI,OAAQP,EAAO,GAAGO,Q,EAIpBH,oBAAsB,SAACY,GACrB,IAAIC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAOqB,QAExCC,EAAWtB,EAAOiB,GAGtB,EAAKM,SAAS,CACZpB,MAAOmB,EAASnB,MAChBI,OAAQe,EAASf,SAGnB,EAAKiB,cAAcxB,I,EAIrBwB,cAAgB,SAACR,GACf,OAAOA,EAAIS,MAAK,WAAc,MAAO,GAAMP,KAAKE,a,uDAIhD,OACE,sBAAKf,UAAU,YAAYC,GAAG,YAA9B,UACE,oBAAID,UAAU,cAAd,0BACA,cAACJ,EAAD,CACEG,oBAAqBsB,KAAKtB,oBAC1BD,MAAOuB,KAAKX,e,GAlCWY,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a22471c.chunk.js","sourcesContent":["const quotes = [\n    {\n        \"quote\": \"I'm selfish, impatient and a little insecure. I make mistakes, I am out of control and at times hard to handle. But if you can't handle me at my worst, then you sure as hell don't deserve me at my best.\",\n        \"author\": \"Marilyn Monroe\"\n    },\n    {\n        \"quote\": \"Be yourself; everyone else is already taken.\",\n        \"author\": \"Oscar Wilde\"\n    },\n\n    {\n        \"quote\": \"Two things are infinite: the universe and human stupidity; and I'm not sure about the universe.\",\n        \"author\": \"Albert Einstein\"\n    },\n    {\n        \"quote\": \"Be the change you wish to see in the world.\",\n        \"author\": \"Mahatma Gandi\"\n    },\n    {\n        \"quote\": \"Every moment that you share someone else's pain, feel what they feel, makes you more human.\",\n        \"author\": \"Bill Murray\"\n    },\n    {\n        \"quote\": \"Life is a tragedy for those who feel, and a comedy for those who think.\",\n        \"author\": \"La Bruyere\"\n\n    }\n]\n\nexport default quotes;","import React from 'react'\nimport quotes from '../QuoteDB'\n\nexport default function QuoteAndAuthor(props) {\n    const { quote, generateRandomQuote } = props;\n    return (\n        <div className=\"card\" >\n\n            <div className=\"card-body\" id=\"quote-box\">\n                <p className=\"card-text\" id=\"text\">{quote.quote}</p>\n                <h5 className=\"card-title\" id=\"author\">{quote.author}</h5>\n                <button \n                    id=\"new-quote\"\n                    onClick={() => { generateRandomQuote(quotes) }}\n                    type=\"submit\">\n                    <i class=\"fas fa-mouse\"></i> Generate Quote\n                </button>\n                <button\n                    className=\"ml-3\"\n                    id=\"tweet-quote\"\n                    onClick={() => {\n                        generateRandomQuote(quotes);\n                        window.open('https://twitter.com/intent/tweet/?text=' + encodeURIComponent(quote.quote + '--' + quote.author))\n                    }}\n                    type=\"submit\"> <i class=\"fab fa-twitter\"> </i> Share Quote\n                </button>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport QuoteAndAuthor from './components/QuoteAndAuthor';\nimport quotes from './QuoteDB';\n\nexport default class App extends Component {\n\n  //state\n  state = {\n    quote: quotes[0].quote,\n    author: quotes[0].author,\n  }\n  \n  //generate quote function\n  generateRandomQuote = (arr) => {\n    let num = Math.floor(Math.random() * quotes.length)\n\n    let newQuote = quotes[num];\n\n    //update state\n    this.setState({\n      quote: newQuote.quote,\n      author: newQuote.author\n    })\n\n    this.shuffleQuotes(quotes)\n  }\n\n  //shuffle quotes function\n  shuffleQuotes = (arr) => {\n    return arr.sort(function () { return 0.5 - Math.random() });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"quote-box\">\n        <h1 className=\"text-center\">Random Quote</h1>\n        <QuoteAndAuthor\n          generateRandomQuote={this.generateRandomQuote}\n          quote={this.state}\n          />\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}